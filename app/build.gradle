apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply from: '../config/quality.gradle'

jacoco {
    toolVersion = '0.8.2'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = false
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.wagubibrian.github_connect"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
        }
    }
    testOptions {
//        execution 'ANDROID_TEST_ORCHESTRATOR'
//        animationsDisabled true

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${project.ext.appcompatVersion}"
    implementation "com.android.support.constraint:constraint-layout:${project.ext.constraintLayoutVersion}"
    testImplementation "junit:junit:${project.ext.junitVersion}"
    testImplementation "org.robolectric:robolectric:${project.ext.robolectricVersion}"
    androidTestImplementation "com.android.support.test:runner:${project.ext.runnerVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${project.ext.espressoCoreVersion}"
    androidTestUtil "com.android.support.test:orchestrator:${project.ext.orchestratorVersion}"
    implementation "com.android.support:recyclerview-v7:${project.ext.recyclerViewVersion}"
    implementation "com.android.support:cardview-v7:${project.ext.cardviewVersion}"
    implementation "com.squareup.retrofit2:retrofit:${project.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${project.ext.converterGsonVersion}"
    implementation "com.squareup.picasso:picasso:${project.ext.picassoVersion}"
    implementation "com.github.bumptech.glide:glide:${project.ext.glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${project.ext.compilerVersion}"
    implementation "com.android.support:exifinterface:${project.ext.exifinterfaceVersion}"
    implementation "com.android.support:support-vector-drawable:${project.ext.supportVectorDrawableVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${project.ext.espressoContrib}", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestImplementation "com.android.support.test:rules:${project.ext.rulesVersion}"
    implementation "com.squareup.okhttp:okhttp:${project.ext.okhttpVersion}"
    androidTestImplementation ("com.squareup.okhttp:mockwebserver:${project.ext.mockwebserverVersion}")
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${project.ext.espressoIntentsVersion}"
    androidTestImplementation "org.mockito:mockito-core:${project.ext.mockitoCoreVersion}"
}
